/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package OXS;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class Quiz extends javax.swing.JFrame {

    /** Creates new form Quiz */
    public Quiz() {
        initComponents();
         jTextArea1.enable(false);
    }
    ButtonGroup b1;
    int marks=0;
    String name;
    String rollN;
    int count;
    String id;
    //String[] arr = new String[count]; 
   String[] answers=new String[100];
   String userN;
     public Quiz(String nam,String rolN,String qi,int coun,String usN) {
        initComponents();
        name=nam;
        rollN=rolN;
        count=coun;
        id=qi;
        userN=usN;
        for(int i=0;i<count;i++)
        {
            jComboBox1.addItem(Integer.toString(i+1));
            answers[i]="";
        }
    //    answers[count]="";
              b1=new ButtonGroup();
        b1.add(jRadioButton1);
        b1.add(jRadioButton2);
        b1.add(jRadioButton3);
        b1.add(jRadioButton4);
        jTextArea1.enable(false);
        jLabel1.setText("1");
         try {
            Connection con = DBConnection.getDatabaseConnection();
             
               PreparedStatement pst,pst1;
               //String sql1 = "Select count(*) from QuizQ where quizId = ?";
      
      ResultSet rs;
        String sql = "select * from QuizQ where (quizId=? AND quId='1')";
                pst1 = con.prepareStatement(sql);
                    pst1.setString(1, qi );
                 rs = pst1.executeQuery();
                 if(rs.next()){
             jTextArea1.setText(rs.getString("ques"));
       jRadioButton1.setText(rs.getString("o1"));
       jRadioButton2.setText(rs.getString("o2"));
       jRadioButton3.setText(rs.getString("o3"));
       jRadioButton4.setText(rs.getString("o4"));
                 }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Best of luck", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jRadioButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jRadioButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Previous");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 173, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)))
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton4)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                try {
            Connection con = DBConnection.getDatabaseConnection();
             
               PreparedStatement pst,pst1;
               //String sql1 = "Select count(*) from QuizQ where quizId = ?";
      int x=Integer.parseInt(jLabel1.getText());
         if(jRadioButton1.isSelected())
        {
            answers[x-1]="1";
        }
        else 
             if(jRadioButton2.isSelected())
        {
            answers[x-1]="2";
        }
             else 
              if(jRadioButton4.isSelected())
        {
            answers[x-1]="3";
        }
              else  if(jRadioButton4.isSelected())
        {
            answers[x-1]="4";
        }
       PreparedStatement pst3;
       ResultSet rs3;
       String sql3="select quizallow from QuizQ where (quizId=?)";
       pst3=con.prepareStatement(sql3);
       pst3.setString(1,id);
       rs3=pst3.executeQuery();
       int x2 =100;
       b1.clearSelection();
      ResultSet rs;
        String sql = "select * from QuizQ where (quizId=? AND quId=?)";
                pst1 = con.prepareStatement(sql);
                    pst1.setString(1, id );
                    pst1.setString(2, Integer.toString(x+1));
                 rs = pst1.executeQuery();
                 if(rs3.next())
                 {
                     
                x2 = Integer.parseInt(rs3.getString(1));
                
                 }
                if(x2==0)
                {
                          JOptionPane.showMessageDialog(null, "Times up"); 
                }
                 else
                     if(rs.next())
                 {
              jTextArea1.setText(rs.getString("ques"));
              jRadioButton1.setText(rs.getString("o1"));
              jRadioButton2.setText(rs.getString("o2"));
              jRadioButton3.setText(rs.getString("o3"));
              jRadioButton4.setText(rs.getString("o4"));
              jLabel1.setText(Integer.toString(x+1));
              jComboBox1.setSelectedIndex(x);
      if(answers[x].equals(""))
        {
           b1.clearSelection(); 
        }
        else
        {
           b1.clearSelection();
            if(answers[x].equals("1"))
            {
                jRadioButton1.setSelected(true);
            }
            else if(answers[x].equals("2"))
            {
                jRadioButton2.setSelected(true);
            }
            else if(answers[x].equals("3"))
            {
                jRadioButton3.setSelected(true);
            }
            else if(answers[x].equals("4"))
            {
                jRadioButton4.setSelected(true);
            }
        }
                 }
                 else
                 {
                JOptionPane.showMessageDialog(null, "Last Question you may submit");
                 }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      int x=Integer.parseInt(jLabel1.getText());
        if(jRadioButton1.isSelected())
        {
            answers[x-1]="1";
            
        }
        else 
             if(jRadioButton2.isSelected())
        {
            answers[x-1]="2";
        }
             else 
              if(jRadioButton3.isSelected())
        {
            answers[x-1]="3";
        }
              else  if(jRadioButton4.isSelected())
        {
            answers[x-1]="4";
        }
       b1.clearSelection();
       
        try {
            Connection con = DBConnection.getDatabaseConnection();
             
               PreparedStatement pst,pst1;
               //String sql1 = "Select count(*) from QuizQ where quizId = ?";
      
      ResultSet rs;
        String sql = "select * from QuizQ where (quizId=? AND quId=?)";
                pst1 = con.prepareStatement(sql);
                    pst1.setString(1, id );
                    pst1.setString(2, Integer.toString(x-1));
                 rs = pst1.executeQuery();
                 PreparedStatement pst3;
       ResultSet rs3;
       String sql3="select quizallow from QuizQ where (quizId=?)";
       pst3=con.prepareStatement(sql3);
       pst3.setString(1,id);
       rs3=pst3.executeQuery();
       int x2 =100;
         if(rs3.next())
                 {
                     
                x2 = Integer.parseInt(rs3.getString(1));
                
                 }
                if(x2==0)
                {
                          JOptionPane.showMessageDialog(null, "Times up"); 
                }else
                 if(rs.next()){
        jTextArea1.setText(rs.getString("ques"));
        jRadioButton1.setText(rs.getString("o1"));
        jRadioButton2.setText(rs.getString("o2"));
        jRadioButton3.setText(rs.getString("o3"));
        jRadioButton4.setText(rs.getString("o4"));
        jLabel1.setText(Integer.toString(x-1));
         jComboBox1.setSelectedIndex(x-2);
        if(answers[x-2].equals(""))
        {
            b1.clearSelection();
        }
        else
        {
            b1.clearSelection();
            if(answers[x-2].equals("1"))
            {
                jRadioButton1.setSelected(true);
            }
            else if(answers[x-2].equals("2"))
            {
                jRadioButton2.setSelected(true);
            }
            else if(answers[x-2].equals("3"))
            {
                jRadioButton3.setSelected(true);
            }
            else if(answers[x-2].equals("4"))
            {
                jRadioButton4.setSelected(true);
            }
        }
                 }
                 else
                 {
                JOptionPane.showMessageDialog(null, "Cant load First Questoin");
                 }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      int x=Integer.parseInt(jLabel1.getText());
        if(jRadioButton1.isSelected())
        {
            answers[x-1]="1";
        }
        else 
             if(jRadioButton2.isSelected())
        {
            answers[x-1]="2";
        }
             else 
              if(jRadioButton3.isSelected())
        {
            answers[x-1]="3";
        }
              else  if(jRadioButton4.isSelected())
        {
            answers[x-1]="4";
        }
       
        try {
            Connection con = DBConnection.getDatabaseConnection();
            marks=0;
            PreparedStatement pst3;
                        ResultSet rs3;
       String sql3="select quizallow from QuizQ where (quizId=?)";
       pst3=con.prepareStatement(sql3);
       pst3.setString(1,id);
       rs3=pst3.executeQuery();
       int x2 =100;
         if(rs3.next())
                 {
                     
                x2 = Integer.parseInt(rs3.getString(1));
                
                 }
                if(x2==0)
                {
                          JOptionPane.showMessageDialog(null, "Times up"); 
                }else{
            for(int i=1;i<=count;i++){    
               PreparedStatement pst1;
                   
      ResultSet rs;
        String sql = "select * from QuizQ where (quizId=? AND quId=?)";
                pst1 = con.prepareStatement(sql);
                    pst1.setString(1, id );
                    pst1.setString(2,Integer.toString(i));
                 rs = pst1.executeQuery();
     
                 if(rs.next()){
             String s = rs.getString("coO");
             if(s.equals(answers[i-1]))
             {
                 marks++;
             }
                
            }
         }
            ResultSet rs1;
            String sql1 = "INSERT into Main (quizId,name,rollN,marks,username) values(?,?,?,?,?) ";
              PreparedStatement pst = con.prepareStatement(sql1);  
              pst.setString(1,id);
              pst.setString(2,name);
              pst.setString(3,rollN);
              pst.setString(4,Integer.toString(marks));
              pst.setString(5,userN);
            pst.execute();
            dispose();
            new MainS(userN).setVisible(true);
            
        }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     
        try {
            int x;
           x = Integer.parseInt((String)jLabel1.getText());
       //String s= (String) jComboBox1.getSelectedItem();
       if(jRadioButton1.isSelected())
        {
           answers[x-1]="1";
         }
        else 
             if(jRadioButton2.isSelected())
        {
          answers[x-1]="2";
        }
             else 
              if(jRadioButton3.isSelected())
        {
            answers[x-1]="3";
        }
              else  if(jRadioButton4.isSelected())
        {
            answers[x-1]="4";
        }
       b1.clearSelection();
       
            Connection con = DBConnection.getDatabaseConnection();
             
               PreparedStatement pst,pst1,pst3;
               //String sql1 = "Select count(*) from QuizQ where quizId = ?";
      
      ResultSet rs;
        String sql = "select * from QuizQ where (quizId=? AND quId=?)";
                pst1 = con.prepareStatement(sql);
                    pst1.setString(1, id );
                        pst1.setString(2, Integer.toString(jComboBox1.getSelectedIndex()+1));
                 rs = pst1.executeQuery();
                 ResultSet rs3;
       String sql3="select quizallow from QuizQ where (quizId=?)";
       pst3=con.prepareStatement(sql3);
       pst3.setString(1,id);
       rs3=pst3.executeQuery();
       int x2 =100;
         if(rs3.next())
                 {
                     
                x2 = Integer.parseInt(rs3.getString(1));
                
                 }
                if(x2==0)
                {
                          JOptionPane.showMessageDialog(null, "Times up"); 
                }else
                 if(rs.next()){
        jTextArea1.setText(rs.getString("ques"));
        jRadioButton1.setText(rs.getString("o1"));
        jRadioButton2.setText(rs.getString("o2"));
        jRadioButton3.setText(rs.getString("o3"));
        jRadioButton4.setText(rs.getString("o4"));
        jLabel1.setText(Integer.toString(jComboBox1.getSelectedIndex()+1));
      int y=Integer.parseInt(jLabel1.getText())-1;
        if(y<count)
        {
            //b1.clearSelection();
            if(answers[y].equals("1"))
            {
                jRadioButton1.setSelected(true);
            }
            else if(answers[y].equals("2"))
            {
                jRadioButton2.setSelected(true);
            }
            else if(answers[y].equals("3"))
            {
                jRadioButton3.setSelected(true);
            }
            else if(answers[y].equals("4"))
            {
                jRadioButton4.setSelected(true);
            }
            else
            {
                b1.clearSelection();
            }
        }
                     }
                 else
                 {
                JOptionPane.showMessageDialog(null, "Cant load Questoin");
                 }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainT.class.getName()).log(Level.SEVERE, null, ex);
        } catch(NullPointerException e)
        {
        } catch(NumberFormatException x)
        {
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Quiz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}
